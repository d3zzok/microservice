services:
  order-service:
    build: ./order-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@order-db:5432/orderdb
    depends_on:
      order-db:
        condition: service_healthy
    restart: on-failure

  payment-service:
    build: ./payment-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@payment-db:5432/paymentdb
    depends_on:
      payment-db:
        condition: service_healthy
    restart: on-failure

  delivery-service:
    build: ./delivery-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@delivery-db:5432/deliverydb
    depends_on:
      delivery-db:
        condition: service_healthy
    restart: on-failure

  # Базы данных
  order-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=orderdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d orderdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  payment-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=paymentdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d paymentdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  delivery-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=deliverydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d deliverydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped